#include <mpi.h>
#include <stdio.h>
#include <stdlib.h>

#define TOTAL_SAMPLES 1000000

int main(int argc, char** argv) {
    int process_id, num_processes, local_hits = 0, global_hits = 0;
    double rand_x, rand_y;
    
    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &process_id);
    MPI_Comm_size(MPI_COMM_WORLD, &num_processes);
    
    srand(process_id + 123);  // Different seed for each process

    int samples_per_process = TOTAL_SAMPLES / num_processes;
    for (int j = 0; j < samples_per_process; j++) {
        rand_x = (double)rand() / RAND_MAX;
        rand_y = (double)rand() / RAND_MAX;
        if (rand_x * rand_x + rand_y * rand_y <= 1.0) local_hits++;
    }

    MPI_Reduce(&local_hits, &global_hits, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);

    if (process_id == 0) {
        double pi_approx = (4.0 * global_hits) / TOTAL_SAMPLES;
        printf("Approximated Pi: %lf\n", pi_approx);
    }

    MPI_Finalize();
    return 0;
}
